<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="1466.8499"
   height="404.6568"
   viewBox="0 0 1466.8499 404.6568"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs1"><linearGradient
       id="linearGradient7"><stop
         style="stop-color:#b3e6ff;stop-opacity:1;"
         offset="0"
         id="stop7" /><stop
         style="stop-color:#b3e6ff;stop-opacity:1;"
         offset="1"
         id="stop8" /></linearGradient><linearGradient
       id="linearGradient11"><stop
         style="stop-color:#00bfff;stop-opacity:1;"
         offset="0"
         id="stop11" /><stop
         style="stop-color:#00bfff;stop-opacity:1;"
         offset="1"
         id="stop12" /></linearGradient><linearGradient
       id="linearGradient15"><stop
         style="stop-color:#00bfff;stop-opacity:1;"
         offset="0"
         id="stop15" /><stop
         style="stop-color:#007acc;stop-opacity:1;"
         offset="1"
         id="stop16" /></linearGradient><linearGradient
       id="linearGradient9"><stop
         style="stop-color:#ff4500;stop-opacity:1;"
         offset="0"
         id="stop9" /><stop
         style="stop-color:#ff8c00;stop-opacity:1;"
         offset="1"
         id="stop10" /></linearGradient><linearGradient
       id="linearGradient13"><stop
         style="stop-color:#ff8c00;stop-opacity:1;"
         offset="0"
         id="stop13" /><stop
         style="stop-color:#ff8c00;stop-opacity:1;"
         offset="1"
         id="stop14" /></linearGradient><linearGradient
       xlink:href="#linearGradient7"
       id="linearGradient46"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.26652106,0,0,0.22389515,-0.8198271,2.9874621)"
       x1="135.3763"
       y1="162.72864"
       x2="210.04568"
       y2="162.72864" /><linearGradient
       xlink:href="#linearGradient11"
       id="linearGradient47"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.26652106,0,0,0.22389515,-0.8198271,2.4582955)"
       x1="121.96717"
       y1="115.53352"
       x2="154.43416"
       y2="65.053627" /><linearGradient
       xlink:href="#linearGradient15"
       id="linearGradient48"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.26652106,0,0,0.22389515,-0.8198271,2.4582955)"
       x1="156.0914"
       y1="112.14474"
       x2="256.6149"
       y2="149.6441" /><linearGradient
       xlink:href="#linearGradient9"
       id="linearGradient49"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.26652106,0,0,0.22389515,-0.8198271,2.4582955)"
       x1="60.588936"
       y1="242.86763"
       x2="89.047371"
       y2="192.26671" /><linearGradient
       xlink:href="#linearGradient13"
       id="linearGradient50"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.26652106,0,0,0.22389515,-0.96086116,2.3398177)"
       x1="98.373009"
       y1="179.37006"
       x2="134.9948"
       y2="256.12579" /></defs><g
     id="layer2"
     transform="translate(4089.8669,779.98004)"><script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
       id="g124"
       transform="translate(-1174.2818,-557.86619)"><g
         id="g40"
         transform="matrix(0.81985276,0,0,0.81985276,-1681.6127,-185.24728)"
         style="fill:#ffffff;fill-opacity:1"><path
           d="m -891.53474,-34.170584 h 11.5562 l 78.7923,186.475104 h -14.18262 l -26.00145,-61.457992 h -89.0353 l -26.00146,61.457992 h -14.44525 z m 46.48745,113.98619 -40.70935,-97.702449 -41.49728,97.702449 z m 124.20568,65.922884 q -1.3132,0.52529 -5.25282,2.62641 -3.93961,2.10113 -9.98036,3.93962 -6.04074,1.57585 -13.39469,1.57585 -7.0913,0 -13.39469,-2.62641 -6.04074,-2.88906 -9.71771,-8.40452 -3.67698,-5.51546 -3.67698,-13.39469 V 26.499485 h -19.17279 V 15.731204 h 19.17279 v -46.750096 h 13.13205 v 46.750096 h 31.77956 v 10.768281 h -31.77956 v 99.803575 q 0.52528,7.61659 5.51546,11.55621 4.99018,3.67697 11.55621,3.67697 8.14187,0 14.18261,-2.62641 6.04074,-2.88905 7.09131,-3.67697 z m 23.11234,6.56603 V 15.731204 h 13.13205 V 152.30452 Z m 0,-167.564953 v -24.162971 h 13.13205 v 24.162971 z m 115.29959,160.998923 q -1.31321,0.52529 -5.25282,2.62641 -3.93962,2.10113 -9.98036,3.93962 -6.04074,1.57585 -13.39469,1.57585 -7.09131,0 -13.39469,-2.62641 -6.04074,-2.88906 -9.71772,-8.40452 -3.67697,-5.51546 -3.67697,-13.39469 V 26.499485 h -19.17279 V 15.731204 h 19.17279 v -46.750096 h 13.13205 v 46.750096 h 31.77956 v 10.768281 h -31.77956 v 99.803575 q 0.52528,7.61659 5.51546,11.55621 4.99018,3.67697 11.5562,3.67697 8.14187,0 14.18262,-2.62641 6.04074,-2.88905 7.0913,-3.67697 z m 24.16287,-185.161894 h 13.39469 V 125.2525 q 0,9.45507 3.93961,13.13205 3.93962,3.41433 10.243,3.41433 4.20226,0 8.66715,-0.78792 4.4649,-0.78793 7.87923,-2.10113 l 2.62641,10.76828 q -4.46489,1.57585 -11.03092,2.88905 -6.56602,1.31321 -11.29356,1.31321 -11.03092,0 -17.85959,-6.56603 -6.56602,-6.82866 -6.56602,-18.12223 z m 55.6801,152.331774 q 0,-12.34413 7.35395,-21.273919 7.35395,-9.192435 20.22335,-14.182614 12.86941,-5.25282 29.67844,-5.25282 10.50564,0 21.7992,1.838487 11.29356,1.838487 20.22336,4.990179 V 66.158275 q 0,-18.910152 -11.03093,-30.203714 -10.76828,-11.293563 -29.94107,-11.293563 -10.243,0 -21.27392,4.202256 -11.03092,4.202256 -22.58713,12.081485 l -5.51546,-9.455075 q 13.39469,-8.929794 25.73882,-13.394691 12.60677,-4.727538 24.9509,-4.727538 24.42561,0 38.60822,14.445255 14.18261,14.445254 14.18261,39.396149 v 67.761371 q 0,3.1517 1.31321,4.72754 1.57585,1.57585 4.4649,1.83849 v 10.76828 q -2.36377,0.26264 -3.93962,0.26264 -1.57584,0 -2.62641,0 -4.99018,-0.78792 -7.87923,-4.20226 -2.62641,-3.41433 -2.88905,-7.61658 v -10.76828 q -9.45507,11.81884 -24.42561,18.38486 -14.7079,6.56603 -30.99164,6.56603 -12.86941,0 -23.37505,-5.51546 -10.24299,-5.51546 -16.28374,-14.97054 -5.7781,-9.71771 -5.7781,-21.53656 z m 94.02548,11.29356 q 2.62641,-3.41433 3.93961,-6.56602 1.31321,-3.15169 1.31321,-5.7781 V 89.270682 q -9.45508,-3.676974 -19.69808,-5.515461 -10.243,-1.838487 -21.01128,-1.838487 -20.486,0 -33.3554,8.141871 -12.60677,8.14187 -12.60677,22.061845 0,8.66715 4.46489,16.0211 4.4649,7.35395 12.34413,11.81884 8.14187,4.4649 18.64751,4.4649 14.7079,0 27.05202,-5.51546 12.60677,-5.7781 18.91016,-14.7079 z m 169.92893,28.10259 h -13.13205 V 76.138632 q 0,-26.264099 -7.61659,-38.345585 -7.35395,-12.344126 -23.63769,-12.344126 -11.55621,0 -22.84977,5.515461 -11.03092,5.515461 -19.43543,15.233177 -8.14187,9.455076 -11.81885,21.536561 v 84.5704 h -13.13205 V 15.731204 h 12.34413 v 32.567483 q 5.51546,-10.50564 14.7079,-18.122228 9.19243,-7.87923 20.48599,-12.344127 11.29357,-4.464897 23.37505,-4.464897 11.29356,0 18.91015,4.202256 7.87923,3.939615 12.60677,11.556204 4.99018,7.616589 7.09131,18.910151 2.10113,11.293563 2.10113,25.738817 z"
           id="text20"
           style="font-weight:300;font-size:262.641px;line-height:1;font-family:Raleway;-inkscape-font-specification:'Raleway Light';letter-spacing:0px;word-spacing:0px;stroke:#ffffff;stroke-width:1.05222;stroke-linecap:round;stroke-linejoin:round;paint-order:stroke fill markers"
           aria-label="Atitlan" /></g><g
         id="g46"
         transform="matrix(6.7225275,0,0,6.7225275,-2979.6949,-281.51597)"><path
           style="fill:#b3e6ff;fill-opacity:1;stroke:url(#linearGradient46);stroke-width:5.77628;stroke-linecap:round;stroke-dasharray:none"
           d="m 52.305837,39.421617 h -14.1891"
           id="path40" /><path
           style="fill:#00ffff;stroke:url(#linearGradient47);stroke-width:5.77628;stroke-linecap:round;stroke-dasharray:none"
           d="M 40.755021,11.80838 28.770885,33.86372"
           id="path41" /><path
           style="fill:#ffcc00;fill-opacity:1;stroke:url(#linearGradient48);stroke-width:5.77628;stroke-linecap:round;stroke-dasharray:none"
           d="m 40.751732,11.724418 23.965787,48.47694"
           id="path42" /><g
           id="g45"><g
             id="g44"><path
               style="color:#000000;fill:#ffdbb3;stroke-linecap:round;-inkscape-stroke:none"
               d="M 24.947171,41.696788 13.599138,59.825383"
               id="path43" /><path
               style="color:#000000;fill:url(#linearGradient49);stroke-linecap:round;-inkscape-stroke:none"
               d="M 26.480469,39.248047 C 25.128347,38.401795 23.34621,38.811914 22.5,40.164062 l -11.077648,17.694499 -0.271961,0.434408 c -0.153349,0.245019 -0.595008,0.846667 -0.992421,0.797737 -0.144733,-0.01782 -0.5903129,-0.266592 -0.6059033,-0.176699 -0.1946108,1.122113 1.4893293,2.717951 2.5143393,3.35943 1.352122,0.846252 3.134259,0.436133 3.980469,-0.916015 L 27.394531,43.228516 c 0.846609,-1.351614 0.437396,-3.133612 -0.914062,-3.980469 z"
               id="path44" /></g><path
             style="fill:#00ffff;stroke:url(#linearGradient50);stroke-width:5.77628;stroke-linecap:round;stroke-dasharray:none"
             d="M 24.939185,41.646512 35.160176,60.24224"
             id="path45" /></g></g><g
         id="g116"
         transform="matrix(0.81985276,0,0,0.81985276,-1646.7701,215.13975)"
         style="fill:#ffffff;fill-opacity:1"><path
           d="m -1013.3509,-193.40513 q 0,-16.80903 5.7781,-33.09277 6.0407,-16.54638 17.33431,-29.94107 11.29356,-13.65733 27.5773,-21.7992 16.54638,-8.14188 37.55766,-8.14188 24.9509,0 42.54784,11.55621 17.59695,11.29356 26.2641,29.15315 l -11.03092,6.30338 q -6.56602,-12.86941 -16.28374,-20.486 -9.45508,-7.61658 -20.486,-10.76828 -11.03092,-3.41433 -22.06184,-3.41433 -17.59695,0 -31.51692,7.09131 -13.65733,7.0913 -23.11241,18.91015 -9.45507,11.81884 -14.44525,26.2641 -4.72754,14.44525 -4.72754,29.15315 0,16.54638 5.7781,31.51692 5.7781,14.70789 15.75846,26.2641 10.243,11.5562 23.63769,18.38487 13.65733,6.82866 29.41579,6.82866 11.29356,0 22.84977,-3.67697 11.81884,-3.93962 22.06184,-11.81885 10.243,-8.14187 16.54638,-21.01128 l 11.55621,5.51546 q -6.04075,13.91998 -18.12223,23.63769 -12.08149,9.71772 -26.78938,14.7079 -14.7079,4.990178 -29.15315,4.990178 -18.91015,0 -34.93125,-8.141868 -16.02111,-8.40451 -27.83995,-22.06185 -11.55617,-13.91997 -17.85957,-30.99163 -6.3034,-17.33431 -6.3034,-34.93125 z m 247.40796,97.177162 q -14.44526,0 -26.78938,-5.515462 -12.08149,-5.51546 -21.01128,-15.23318 -8.9298,-9.98035 -13.91998,-22.84976 -4.99018,-12.86941 -4.99018,-27.05202 0,-14.44526 4.99018,-27.05203 4.99018,-12.86941 13.91998,-22.58712 9.19243,-9.98036 21.27392,-15.49582 12.34412,-5.7781 26.52674,-5.7781 14.18261,0 26.2641,5.7781 12.08148,5.51546 21.27392,15.49582 9.19243,9.71771 14.18261,22.58712 4.99018,12.60677 4.99018,27.05203 0,14.18261 -4.99018,27.05202 -4.99018,12.86941 -14.18261,22.84976 -8.9298,9.71772 -21.27392,15.23318 -12.08149,5.515462 -26.2641,5.515462 z m -53.57877,-70.125142 q 0,16.0211 7.09131,29.41579 7.35395,13.13205 19.43543,21.01128 12.08149,7.87923 26.78939,7.87923 14.70789,0 26.78938,-7.87923 12.34412,-8.14187 19.43543,-21.53656 7.35395,-13.65733 7.35395,-29.67844 0,-16.0211 -7.35395,-29.41579 -7.09131,-13.39469 -19.43543,-21.27392 -12.08149,-8.14187 -26.52674,-8.14187 -14.7079,0 -26.78938,8.14187 -12.08149,8.14187 -19.43544,21.53656 -7.35395,13.3947 -7.35395,29.94108 z m 263.42917,67.498732 h -13.13205 v -76.165892 q 0,-26.26409 -7.61659,-38.34558 -7.35395,-12.34413 -23.63769,-12.34413 -11.5562,0 -22.84976,5.51546 -11.03093,5.51547 -19.43544,15.23318 -8.14187,9.45508 -11.81884,21.53656 v 84.570402 h -13.13205 V -235.42769 h 12.34413 v 32.56748 q 5.51546,-10.50564 14.70789,-18.12223 9.19244,-7.87923 20.486,-12.34413 11.29356,-4.46489 23.37505,-4.46489 11.29356,0 18.91015,4.20225 7.87923,3.93962 12.60677,11.55621 4.99017,7.61659 7.0913,18.91015 2.10113,11.29356 2.10113,25.73882 z m 82.73198,2.62641 q -16.28374,0 -30.20371,-5.515462 -13.91997,-5.51546 -24.42561,-16.80902 l 6.04074,-9.19244 q 11.29356,10.76828 22.84977,15.75846 11.5562,4.72754 25.21353,4.72754 17.59695,0 28.36523,-7.35395 11.03092,-7.35394 11.03092,-20.48599 0,-8.9298 -5.25282,-13.65734 -4.99018,-4.99017 -14.7079,-7.87923 -9.45507,-3.15169 -23.1124,-6.56602 -13.91998,-3.67697 -23.63769,-7.61659 -9.45508,-3.93961 -14.18262,-10.243 -4.72753,-6.30338 -4.72753,-17.07166 0,-13.39469 6.56602,-22.06185 6.82867,-8.92979 18.12223,-13.13205 11.5562,-4.46489 25.47618,-4.46489 16.0211,0 27.83994,5.25282 12.08149,5.25282 18.38487,13.91997 l -7.09131,8.40451 q -6.56602,-8.40451 -17.07166,-12.34412 -10.50564,-4.20226 -23.11241,-4.20226 -9.45507,0 -17.85959,2.62641 -8.40451,2.62641 -13.65733,8.66715 -4.99018,5.7781 -4.99018,15.75846 0,7.87923 3.67698,12.34413 3.93961,4.4649 11.5562,7.35395 7.61659,2.62641 18.91015,5.7781 16.0211,3.93961 27.57731,8.14187 11.5562,4.20225 17.85958,11.03092 6.30339,6.56602 6.30339,18.64751 0,18.64751 -14.18262,29.41579 -14.18261,10.768282 -37.55766,10.768282 z m 81.41873,-60.407432 v -78.79229 h 13.13205 v 76.95381 q 0,25.47617 8.40451,38.08294 8.66715,12.34413 26.00146,12.34413 11.5562,0 22.06184,-4.99018 10.76828,-5.25282 18.91015,-14.44526 8.14187,-9.45507 12.08149,-21.7992 v -86.14624 h 13.13205 v 119.23901 q 0,3.15169 1.3132,4.72753 1.57585,1.57585 4.20226,1.83849 v 10.768282 q -2.62641,0.262641 -4.20226,0.262641 -1.3132,0 -2.36377,-0.262641 -4.46489,-0.525282 -7.35394,-3.676972 -2.88906,-3.41433 -3.1517,-8.14187 l -0.26264,-20.486 q -8.92979,16.28374 -24.68825,25.73882 -15.49582,9.192432 -33.61805,9.192432 -21.53656,0 -32.56748,-15.233182 -11.03092,-15.23317 -11.03092,-45.17425 z m 156.53399,-133.9469 h 13.39469 v 164.6759 q 0,9.45508 3.93962,13.13205 3.93961,3.41433 10.243,3.41433 4.20225,0 8.66715,-0.78792 4.4649,-0.78792 7.87923,-2.10113 l 2.62641,10.76828 q -4.4649,1.575848 -11.03092,2.889053 -6.56603,1.313205 -11.29356,1.313205 -11.03093,0 -17.85959,-6.566028 -6.56603,-6.82866 -6.56603,-18.12222 z m 127.90638,185.1619 q -1.3132,0.52528 -5.25282,2.62641 -3.93961,2.10113 -9.98036,3.939612 -6.04074,1.575846 -13.39469,1.575846 -7.0913,0 -13.39469,-2.62641 -6.04074,-2.889048 -9.71771,-8.404508 -3.67698,-5.51546 -3.67698,-13.39469 v -102.95527 h -19.17279 v -10.76828 h 19.17279 v -46.7501 h 13.13205 v 46.7501 h 31.77956 v 10.76828 h -31.77956 v 99.80357 q 0.52528,7.61659 5.51546,11.55621 4.99018,3.67697 11.55621,3.67697 8.14187,0 14.18261,-2.62641 6.04074,-2.88905 7.09131,-3.67697 z m 23.112335,6.566022 V -235.42769 h 13.13205 v 136.573312 z m 0,-167.564952 v -24.16297 h 13.13205 v 24.16297 z M 81.600179,-98.854378 h -13.13205 v -76.165892 q 0,-26.26409 -7.616588,-38.34558 -7.353948,-12.34413 -23.63769,-12.34413 -11.556203,0 -22.849766,5.51546 -11.0309215,5.51547 -19.4354333,15.23318 -8.1418707,9.45508 -11.8188447,21.53656 v 84.570402 H -30.022242 V -235.42769 h 12.344126 v 32.56748 q 5.515461,-10.50564 14.7078957,-18.12223 9.1924347,-7.87923 20.4859973,-12.34413 11.293563,-4.46489 23.375048,-4.46489 11.293563,0 18.910152,4.20225 7.879229,3.93962 12.606767,11.55621 4.990179,7.61659 7.091307,18.91015 2.101128,11.29356 2.101128,25.73882 z m 94.813371,2.101128 q -13.91997,0 -26.00145,-5.7781 -11.81885,-5.7781 -20.486,-15.75846 -8.40451,-10.243 -13.39469,-22.58713 -4.72754,-12.60676 -4.72754,-26.00145 0,-13.91998 4.4649,-26.78939 4.72754,-12.8694 13.13205,-22.58712 8.66715,-9.98036 20.22335,-15.75846 11.55621,-5.7781 25.73882,-5.7781 17.85959,0 30.99164,9.45507 13.39469,9.19244 22.58712,22.58713 v -29.67843 h 12.08149 v 139.199722 q 0,18.38487 -8.9298,30.991637 -8.92979,12.606768 -23.63768,18.647511 -14.7079,6.303383 -31.77956,6.303383 -23.90033,0 -38.08295,-8.667152 -13.91997,-8.667153 -22.58712,-22.849767 l 8.92979,-6.040742 q 8.14187,13.657331 22.06184,20.223356 13.91998,6.566025 29.67844,6.566025 13.91997,0 25.47617,-5.25282 11.81885,-4.990179 18.64751,-15.233178 7.09131,-9.980357 7.09131,-24.688253 v -29.941072 q -8.14187,13.39469 -22.32449,21.53656 -13.91997,7.87923 -29.15315,7.87923 z m 3.1517,-11.29356 q 8.66715,0 16.80902,-3.15169 8.14187,-3.1517 14.97054,-8.40452 6.82866,-5.51546 11.29356,-12.08148 4.4649,-6.56603 5.25282,-13.13205 v -44.91161 q -3.93962,-10.50564 -12.08149,-18.64751 -7.87923,-8.40451 -17.85958,-12.86941 -9.98036,-4.72754 -20.486,-4.72754 -12.34413,0 -22.06184,5.25282 -9.71772,5.25282 -16.54639,13.91997 -6.56602,8.40452 -10.243,19.1728 -3.41433,10.50564 -3.41433,21.01128 0,11.81884 4.20226,22.32448 4.20225,10.50564 11.5562,18.91015 7.61659,8.14187 17.33431,12.86941 9.98035,4.4649 21.27392,4.4649 z"
           id="text116"
           style="font-weight:300;font-size:262.641px;line-height:1;font-family:Raleway;-inkscape-font-specification:'Raleway Light';letter-spacing:0px;word-spacing:0px;stroke:#ffffff;stroke-width:1.05222;stroke-linecap:round;stroke-linejoin:round;paint-order:stroke fill markers"
           aria-label="Consulting" /></g></g></g></svg>
